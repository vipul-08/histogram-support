{"version":3,"sources":["serviceWorker.js","BarGraph/Legend.js","BarGraph/LegendShape.js","BarGraph/index.js","index.js"],"names":["Boolean","window","location","hostname","match","moize","react","parentWidth","arrowStyle","legendToggle","legendScale","legendShape","uniqueSeriesLabel","handleLegendClick","rightOffset","isVisible","wrapperClassName","scale","direction","labelMargin","className","onClick","style","display","maxWidth","whiteSpace","overflow","marginLeft","padding","cursor","fill","datum","text","map","_","String","includes","shape","shapeWidth","shapeHeight","domain","labelTransform","labelFormat","index","undefined","value","LegendShape","width","height","backgroundColor","reactSimple","LegendShapeComp","BarGraph","defaultConfig","margin","top","left","bottom","right","minHeight","colors","tooltipTimeFormat","tooltipTimeFormatWithoutDate","fontFamily","fontColor","axisLabelSize","legendBg","hoverlineColor","axesLabelColor","axisStroke","annotation","stroke","strokeWidth","opacity","annotationCircle","color","activeColor","highlightColor","shouldHighlight","data","ci","annotationHover","annotationActive","getConfig","props","config","getAxisStyle","simple","position","hideTicks","hideAxisLine","tickLabelProps","tickTextColor","tickTextFontFamily","fontSize","shouldXAxisHighlight","fontWeight","dx","dy","textAnchor","getTickValues","desiredTicks","ticks","lastTick","length","newLastTick","push","num","len","r","i","Math","ceil","formatYAxisTick","toFixed","unit","floor","toString","replace","getSingleChartHeight","histograms","chartHeight","max","getXMax","getYMax","renderStackedHistogram","Group","id","key","renderSingleAxis","renderHistogram","hist","ind","Text","x","y","title","renderBarGroup","barGroupData","yScale","console","log","BarGroup","x0","v","bucket","x0Scale","bucketScale","x1Scale","scaleBand","filter","label","Object","keys","rangeRound","bandwidth","val","singleChartHeight","marginTop","barGroups","barGroup","ind1","bars","bar","ind2","rx","alert","JSON","stringify","series","tickValues","numTicks","xMax","reduce","accumulator","current","acc","cur","AxisLeft","tickFormat","labelProps","AxisBottom","tickStroke","this","update","titleDimension","isStacked","marginRight","marginBottom","histogram","split","concat","yMax","buckets","scaleOrdinal","range","numHistograms","curr","b","multiHistogramsData","titleWithDimension","formattedSeries","insideTitle","allData","arr","acc1","curr1","scaleY","scaleLinear","hData","background","overflowY","overflowX","ref","s","svg","React","PureComponent","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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S,cACT,QAAW,CACP,IACA,IACA,GACA,GACA,KAGR,CACI,MAAS,iBACT,QAAW,CACP,IACA,IACA,GACA,GACA,MAGR,CACI,MAAS,uBACT,QAAW,CACP,IACA,IACA,GACA,GACA,QAKhB,CACI,MAAS,sBACT,KAAQ,CACJ,CACI,MAAS,iBACT,QAAW,CACP,IACA,GACA,GACA,GACA,KAGR,CACI,MAAS,eACT,QAAW,CACP,IACA,GACA,GACA,GACA,MAGR,CACI,MAAS,cACT,QAAW,CACP,GACA,GACA,GACA,GACA,KAGR,CACI,MAAS,uBACT,QAAW,CACP,IACA,GACA,IACA,GACA,MAGR,CACI,MAAS,gCACT,QAAW,CACP,IACA,GACA,GACA,GACA,OAKhB,CACI,MAAS,sBACT,KAAQ,CACJ,CACI,MAAS,iBACT,QAAW,CACP,GACA,GACA,EACA,EACA,KAGR,CACI,MAAS,gCACT,QAAW,CACP,GACA,GACA,EACA,EACA,KAGR,CACI,MAAS,0BACT,QAAW,CACP,EACA,EACA,EACA,EACA,IAGR,CACI,MAAS,oBACT,QAAW,CACP,EACA,EACA,EACA,EACA,MAKhB,CACI,MAAS,MACT,KAAQ,CACJ,CACI,MAAS,2BACT,QAAW,CACP,KACA,IACA,GACA,GACA,KAGR,CACI,MAAS,kBACT,QAAW,CACP,KACA,IACA,GACA,GACA,KAGR,CACI,MAAS,iBACT,QAAW,CACP,GACA,GACA,EACA,EACA,IAGR,CACI,MAAS,eACT,QAAW,CACP,GACA,GACA,EACA,EACA,IAGR,CACI,MAAS,cACT,QAAW,CACP,GACA,EACA,EACA,EACA,MAKhB,CACI,MAAS,WACT,KAAQ,CACJ,CACI,MAAS,eACT,QAAW,CACP,IACA,IACA,IACA,IACA,WA+ClB0G,eAAgB,UAChBpG,OAzCS,CACb,OAAU,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ,WAAc,OACd,UAAa,UACb,eAAkB,UAClB,cAAiB,UACjB,eAAkB,UAClB,UAAa,KAWT/B,OAvRS,CAAEC,IAAK,GAAIG,MAAO,EAAGD,OAAQ,GAAID,KAAM,GAwRhDkI,WAAW,KAGfmC,SAASC,eAAe,SJ9JpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1F,QAAQ0F,MAAMA,EAAMC,a","file":"static/js/main.df6d6ab5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport HorizontalListWrapper from 'list-wrapper';\nimport moize from 'moize';\nimport { LegendOrdinal } from '@vx/legend';\n\nfunction Legend({\n                    parentWidth, arrowStyle, legendToggle, legendScale, legendShape, uniqueSeriesLabel, handleLegendClick,\n                }) {\n    const labelTransform = ({ scale, labelFormat }) => (datum, index) => ({\n        datum, index, text: datum === undefined ? '' : `${labelFormat(datum, index)}`, value: scale(datum),\n    });\n\n    return (\n        <HorizontalListWrapper parentWidth={parentWidth} rightOffset={85} isVisible arrowStyle={arrowStyle} wrapperClassName=\"list-wrapper-prop\">\n            <LegendOrdinal\n                scale={legendScale}\n                direction=\"row\"\n                labelMargin=\"0 15px 0 0\"\n                className=\"samurai-vx-legend\"\n                onClick={handleLegendClick}\n                style={{\n                    display: 'flex', maxWidth: `${parentWidth - 85}px`, whiteSpace: 'nowrap', overflow: 'hidden', marginLeft: '35px', padding: '15px 0', cursor: 'pointer',\n                }}\n                fill={({ datum, text }) => legendToggle.map((_) => String(_)).includes(text) ? '#cecece' : legendScale(datum)}\n                shape={legendShape}\n                shapeWidth={10}\n                shapeHeight={10}\n                domain={uniqueSeriesLabel}\n                labelTransform={labelTransform}\n            />\n        </HorizontalListWrapper>\n    );\n}\n\nexport default moize.react(Legend);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction LegendShape({ fill, width, height }) {\n  return (<div\n    className=\"samurai-vx-legend-shape\"\n    style={{\n      width, height, backgroundColor: fill,\n    }}\n  />);\n}\n\n\nLegendShape.propTypes = {\n  fill: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default LegendShape;\n","import React from 'react';\nimport { GridRows } from '@vx/grid';\nimport { Group } from '@vx/group';\nimport {max} from 'd3-array';\nimport moize from 'moize';\nimport Legend from \"./Legend\";\nimport {Text} from \"@vx/text\";\nimport { BarGroup } from '@vx/shape';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { scaleBand, scaleOrdinal, scaleLinear } from '@vx/scale';\nimport LegendShapeComp from './LegendShape';\n\nconst LegendShape = moize.reactSimple(LegendShapeComp);\nconst LEGEND_HEIGHT = 78;\nconst AXIS_HEIGHT = 21;\n\nexport default class BarGraph extends React.PureComponent {\n\n  componentWillMount() {\n    this.update();\n  }\n\n  defaultConfig = {\n    margin: {\n      top: 70,\n      left: 60,\n      bottom: 10,\n      right: 50,\n    },\n    minHeight: 240,\n    colors: ['rgb(107, 157, 255)', 'rgb(252, 137, 159)'],\n    tooltipTimeFormat: '%b %d, %H:%M',\n    tooltipTimeFormatWithoutDate: '%H:%M',\n    fontFamily: 'Arial',\n    fontColor: 'black',\n    axisLabelSize: 10,\n    legendBg: '#eee',\n    legendShape: LegendShape,\n    hoverlineColor: 'black',\n    axesLabelColor: 'black',\n    axisStroke: '#eaf0f6',\n    annotation: {\n      stroke: '#535353',\n      strokeWidth: '1',\n      style: {\n        opacity: '.5',\n        cursor: 'pointer',\n      },\n    },\n    annotationCircle: {\n      color: '#575d6d',\n      activeColor: '#eb5b59',\n      highlightColor: '#62CCA8',\n      shouldHighlight: (data) => data.ci,\n    },\n    annotationHover: {\n      strokeWidth: '4',\n      style: {\n        opacity: '.8',\n        cursor: 'pointer',\n      },\n    },\n    annotationActive: {\n      stroke: 'yellow',\n    },\n  };\n\n  arrowStyle = {\n    height: '20px',\n    width: '20px',\n    backgroundColor: '#f5f5f5',\n  };\n\n  getConfig = (props = this.props) => {\n    const config = { ...this.defaultConfig, ...props.config };\n    // if (this.isDualAxis(props.data)) {\n      // const { margin } = config;\n      // return { ...config, margin: { ...margin, left: margin.left + 20, right: margin.right + 30 } };\n    // }\n\n    return config;\n  }\n\n  getAxisStyle = moize.simple((position = 'left', config = this.getConfig()) => ({\n    hideTicks: true,\n    hideAxisLine: true,\n    stroke: config.axisStroke,\n    tickLabelProps: (value) => ({\n      fill: config.tickTextColor || config.fontColor,\n      fontFamily: this.getConfig().tickTextFontFamily || this.getConfig().fontFamily,\n      fontSize: (position === 'bottom' && this.shouldXAxisHighlight(value)) ? config.axisLabelSize * 1.1 : config.axisLabelSize,\n      // eslint-disable-next-line no-nested-ternary\n      fontWeight: (position === 'bottom') ? (this.shouldXAxisHighlight(value) ? 800 : 300) : undefined,\n      dx: '-0.25em',\n      dy: ['left', 'right'].includes(position) ? '0.25em' : '',\n      // eslint-disable-next-line no-nested-ternary\n      textAnchor: (position === 'left') ? 'end' : (position === 'right') ? 'start' : 'middle',\n    }),\n  }));\n\n  getTickValues = (scale, desiredTicks) => {\n    const ticks = scale.ticks(desiredTicks);\n    const lastTick = ticks[ticks.length-1];\n    const newLastTick = lastTick + (ticks[1] - ticks[0]);\n\n    // if the last tick is smaller than max value, extend the scale domain\n    if(lastTick < scale.domain()[1]) {\n      ticks.push(newLastTick);\n      scale.domain([scale.domain()[0], newLastTick]);\n    }\n\n    // returns num no.of evenly spread elements from arr\n    const num = desiredTicks + 1;\n    const len = ticks.length;\n    const r = [];\n\n    for(let i=0;i<num;i+=1) {\n      r.push(ticks[Math.ceil(i * len / num)]);\n    }\n\n    return r;\n  }\n\n  formatYAxisTick = (num) => {\n    if (num < 1) {\n      return num.toFixed(2);\n    } else {\n      if (num >= 1e3) {\n        const units = ['k', 'M', 'B', 'T'];\n\n        const unit = Math.floor(((num).toFixed(0).length - 1) / 3) * 3;\n        const num1 = (num / (`1e${unit}`)).toFixed(2).toString().replace(/\\.0+$/, '');\n        const unitname = units[Math.floor(unit / 3) - 1];\n\n        return num1 + unitname;\n      }\n\n      return num;\n    }\n  }\n\n  getSingleChartHeight = (props = this.props) => {\n    const { height, data } = props;\n    const { minHeight } = this.getConfig();\n    if (!data.histograms.length) return 0;\n    const chartHeight =  Math.max((height - (this.getConfig(props).margin.bottom)) / data.histograms.length, minHeight);\n    return chartHeight + AXIS_HEIGHT;\n  };\n\n  getXMax = (props) => props.width - this.getConfig(props).margin.left - this.getConfig(props).margin.right;\n  getYMax = (props) => this.getSingleChartHeight(props) - this.getConfig(props).margin.top - this.getConfig(props).margin.bottom;\n\n  update(props = this.props) {\n    const {\n      data, titleDimension, isStacked,\n    } = props;\n    if (data) {\n      this.marginLeft = this.getConfig(props).margin.left;\n      this.marginRight = this.getConfig(props).margin.right;\n      this.marginTop = this.getConfig(props).margin.top;\n      this.marginBottom = this.getConfig(props).margin.bottom;\n      this.singleChartHeight = this.getSingleChartHeight(props);\n      this.uniqueSeriesLabel = data.histograms.reduce((accumulator,histogram) => histogram.data.reduce((acc, split) => accumulator.includes(split.title) ? acc : acc.concat(split.title), accumulator) , []);\n      this.xMax = this.getXMax(props);\n      this.yMax = this.getYMax(props);\n      this.bucketScale = scaleBand({\n        domain: data.buckets,\n        padding: 0.2,\n      });\n      this.bucketScale.rangeRound([0, this.xMax]);\n      this.legendScale = scaleOrdinal({\n        domain: this.uniqueSeriesLabel,\n        range: this.getConfig(props).colors,\n      });\n      this.numHistograms = isStacked ? 1 : data.histograms.length;\n\n      // console.log(data.histograms);\n\n      const stackedHistogramData =  data.histograms.reduce((accumulator,current) => {\n        const dimensionOne = current.title;\n        // console.log(dimensionOne,current.data);\n        current.data.reduce((acc, curr) => {\n          const dimensionTwo = curr.title;\n          const buckets = curr.buckets;\n          // console.log(dimensionOne,dimensionTwo,buckets);\n          buckets.map((b,val) => val);\n          return acc;\n        }, []);\n        return accumulator;\n      } , []);\n\n      const multiHistogramsData = data.histograms.map(({title, data}) => {\n        const titleWithDimension = titleDimension ? `${titleDimension  }: ${  title}` : title;\n        const formattedSeries = data.reduce((accumulator, current) => {\n          const insideTitle = current.title;\n          current.buckets.map((value,index) => {\n            if (accumulator.length <= index) {\n              accumulator = [...accumulator, []]\n            }\n            accumulator[index] = [...accumulator[index],{\n              title: insideTitle,\n              value: value,\n              bucket: props.data.buckets[index],\n            }];\n            return true;\n          });\n          return accumulator;\n        },[]);\n        const allData = formattedSeries.reduce((acc, curr) => {\n          const arr = curr.reduce((acc1, curr1) => [...acc1,curr1.value] , [])\n          return [...acc, ...arr]\n        } ,[]);\n        const scaleY = scaleLinear({\n          domain: [0, max(allData)],\n          range: [ this.yMax, 0],\n        });\n        const tickValues = this.getTickValues(scaleY, 5);\n        return {\n          title: titleWithDimension,\n          series: formattedSeries,\n          yScale: scaleY,\n          tickValues: tickValues,\n        }\n      });\n\n      this.data = {\n        buckets: data.buckets,\n        histograms: isStacked ? [{\n          series: multiHistogramsData.map((hData) => hData)\n        }] : multiHistogramsData,\n      };\n    }\n  }\n\n  renderStackedHistogram = moize((histograms, height) => (\n      <Group id=\"abcd\" key={`xyz`} top={(height)}>\n        {this.renderSingleAxis(histograms)}\n      </Group>\n  ));\n\n  renderHistogram = moize((hist, ind, height) => (\n      <Group id=\"abcd\" key={`${ind}-xyz`} top={(height * ind)}>\n        <Text\n            fontSize={14}\n            x={this.getConfig().margin.left}\n            y={this.getConfig().margin.top - 15}\n            textAnchor=\"start\"\n            fill={this.getConfig().fontColor}\n            fontFamily={this.getConfig().fontFamily}\n            fontWeight=\"bold\"\n        >\n          {hist.title}\n        </Text>\n        {this.renderSingleAxis(hist)}\n      </Group>\n  ));\n\n  renderBarGroup = (barGroupData, yScale) => {\n    console.log(barGroupData);\n    return (\n\n      <BarGroup\n          data={barGroupData}\n          x0={(v) => v.bucket}\n          x0Scale={this.bucketScale}\n          x1Scale={scaleBand({\n            domain: this.uniqueSeriesLabel.filter((label) => Object.keys(barGroupData[0]).includes(label)),\n            padding: 0.1\n          }).rangeRound([0, this.bucketScale.bandwidth()])}\n          yScale={yScale}\n          color={this.legendScale}\n          keys={Object.keys(barGroupData[0]).filter((val) => val !== 'bucket')}\n          height={this.singleChartHeight - this.marginTop}\n      >\n        {barGroups => barGroups.map((barGroup,ind1) => (\n            <Group\n                left={barGroup.x0 }\n            >\n              { barGroup.bars.map((bar, ind2) => (\n                  <rect\n                      x={bar.x}\n                      y={bar.y}\n                      width={bar.width}\n                      height={bar.height}\n                      fill={bar.color}\n                      rx={4}\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => {\n                        const { key, value } = bar;\n                        alert(JSON.stringify({ key, value }));\n                      }}\n                  />\n              ))}\n            </Group>\n        ))}\n      </BarGroup>\n    );\n  };\n\n  renderSingleAxis = moize(( {series, yScale, tickValues}) => series && [\n    <GridRows\n      top={this.marginTop}\n      left={this.marginLeft}\n      scale={yScale}\n      numTicks={5}\n      width={this.xMax}\n      // key={`${chartId}-grid-row`}\n    />,\n    <Group id=\"xyzw\"\n      top={this.marginTop}\n      left={this.marginLeft}\n      // key={`${chartId}-single-axis-formatted`}\n    >\n          {this.renderBarGroup(series.reduce((accumulator, current) => {\n            const barGroup = current.reduce((acc,cur) => {\n              acc[cur.title] = cur.value;\n              acc['bucket'] = cur.bucket;\n              return acc\n            }, {});\n            return [...accumulator, barGroup];\n          } ,[]), yScale)}\n    </Group>,\n\n    <AxisLeft\n      top={this.marginTop}\n      // key={`${chartId}-axis-left`}\n      left={this.marginLeft}\n      scale={yScale}\n      numTicks={5}\n      tickFormat={this.formatYAxisTick}\n      tickValues={tickValues}\n      {...this.getAxisStyle('left')}\n      labelProps={{\n        fill: this.getConfig().axesLabelColor,\n      }}\n    />,\n\n    <AxisBottom\n        width={this.props.width}\n        top={this.singleChartHeight}\n        left={this.marginLeft}\n        scale={this.bucketScale}\n        stroke={'#000000'}\n        tickStroke={'#000000'}\n        hideAxisLine\n        tickLabelProps={() => ({\n          fill: '#00000',\n          fontSize: 11,\n          textAnchor: 'middle',\n        })}\n    />,\n\n  ]);\n\n  render()\n  {\n    const { width, height } = this.props;\n    const singleChartHeight = this.getSingleChartHeight(this.props);\n    return (\n      <div style={{ background: '#fff' }}>\n        <div style={{ background: '#eee' }}>\n            <Legend\n              parentWidth={width}\n              arrowStyle={this.arrowStyle}\n              legendScale={this.legendScale}\n              legendShape={this.getConfig().legendShape}\n              handleLegendClick={() => {}}\n              legendToggle={[]}\n              uniqueSeriesLabel={this.uniqueSeriesLabel}\n            />\n        </div>\n        <div\n            className=\"charts-wrapper\"\n            style={{\n              height: height - LEGEND_HEIGHT, overflowY: 'auto', overflowX: 'hidden',\n            }}\n        >\n          <div style={{ position: 'relative', height: singleChartHeight * this.numHistograms }}>\n            <svg\n                width={width}\n                height={(singleChartHeight * this.numHistograms) + this.getConfig().margin.bottom + this.getConfig().margin.top}\n                ref={(s) => { this.svg = s; }}>\n              <rect x={0} y={0} width={width} height={height * this.numHistograms} fill=\"white\" />\n              { this.props.isStacked\n                  ? this.renderStackedHistogram(this.data.histograms, singleChartHeight)\n                  : this.data.histograms.map((hist,ind) => this.renderHistogram(hist,ind,singleChartHeight))\n              }\n            </svg>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport BarGraph from './BarGraph';\n\nconst margin = { top: 40, right: 0, bottom: 40, left: 0 };\nconst data = {\n    \"buckets\": [\n        \"2000-4000\",\n        \"4000-6000\",\n        \"6000-8000\",\n        \"8000-10000\",\n        \"10000++\"\n    ],\n    \"histograms\": [\n        {\n            \"title\": \"samurai\",\n            \"data\": [\n                {\n                    \"title\": \"CM Failover Realtime\",\n                    \"buckets\": [\n                        220,\n                        83,\n                        59,\n                        30,\n                        158\n                    ]\n                },\n                {\n                    \"title\": \"CM Page View\",\n                    \"buckets\": [\n                        380,\n                        127,\n                        99,\n                        71,\n                        217\n                    ]\n                },\n                {\n                    \"title\": \"CM Ad Click\",\n                    \"buckets\": [\n                        411,\n                        137,\n                        90,\n                        46,\n                        89\n                    ]\n                },\n                {\n                    \"title\": \"HB Rendered Ad\",\n                    \"buckets\": [\n                        451,\n                        191,\n                        90,\n                        57,\n                        194\n                    ]\n                },\n                {\n                    \"title\": \"HB Provider Response\",\n                    \"buckets\": [\n                        250,\n                        122,\n                        57,\n                        36,\n                        255\n                    ]\n                }\n            ]\n        },\n        {\n            \"title\": \"Sherlock Drop Alert\",\n            \"data\": [\n                {\n                    \"title\": \"HB Rendered Ad\",\n                    \"buckets\": [\n                        256,\n                        77,\n                        48,\n                        22,\n                        47\n                    ]\n                },\n                {\n                    \"title\": \"CM Page View\",\n                    \"buckets\": [\n                        208,\n                        86,\n                        49,\n                        43,\n                        200\n                    ]\n                },\n                {\n                    \"title\": \"CM Ad Click\",\n                    \"buckets\": [\n                        66,\n                        35,\n                        18,\n                        11,\n                        52\n                    ]\n                },\n                {\n                    \"title\": \"HB Provider Response\",\n                    \"buckets\": [\n                        135,\n                        57,\n                        102,\n                        60,\n                        462\n                    ]\n                },\n                {\n                    \"title\": \"HB Publisher Slot Impressions\",\n                    \"buckets\": [\n                        194,\n                        77,\n                        29,\n                        22,\n                        67\n                    ]\n                }\n            ]\n        },\n        {\n            \"title\": \"Publisher_Dashboard\",\n            \"data\": [\n                {\n                    \"title\": \"HB Rendered Ad\",\n                    \"buckets\": [\n                        46,\n                        15,\n                        6,\n                        3,\n                        21\n                    ]\n                },\n                {\n                    \"title\": \"HB Publisher Slot Impressions\",\n                    \"buckets\": [\n                        50,\n                        11,\n                        7,\n                        3,\n                        20\n                    ]\n                },\n                {\n                    \"title\": \"HB Auction Participants\",\n                    \"buckets\": [\n                        3,\n                        2,\n                        1,\n                        0,\n                        1\n                    ]\n                },\n                {\n                    \"title\": \"CXT Url Reporting\",\n                    \"buckets\": [\n                        4,\n                        0,\n                        1,\n                        1,\n                        0\n                    ]\n                }\n            ]\n        },\n        {\n            \"title\": \"DMM\",\n            \"data\": [\n                {\n                    \"title\": \"DMM Auction Participants\",\n                    \"buckets\": [\n                        1502,\n                        213,\n                        78,\n                        42,\n                        85\n                    ]\n                },\n                {\n                    \"title\": \"DMM Rendered Ad\",\n                    \"buckets\": [\n                        1502,\n                        213,\n                        78,\n                        42,\n                        85\n                    ]\n                },\n                {\n                    \"title\": \"HB Rendered Ad\",\n                    \"buckets\": [\n                        65,\n                        17,\n                        3,\n                        3,\n                        9\n                    ]\n                },\n                {\n                    \"title\": \"CM Page View\",\n                    \"buckets\": [\n                        60,\n                        27,\n                        8,\n                        1,\n                        4\n                    ]\n                },\n                {\n                    \"title\": \"CM Ad Click\",\n                    \"buckets\": [\n                        14,\n                        1,\n                        2,\n                        0,\n                        3\n                    ]\n                }\n            ]\n        },\n        {\n            \"title\": \"CM-ADMIN\",\n            \"data\": [\n                {\n                    \"title\": \"CM Page View\",\n                    \"buckets\": [\n                        100,\n                        139,\n                        167,\n                        184,\n                        2436\n                    ]\n                }\n            ]\n        }\n    ]\n};\nconst config = {\n  \"colors\": [\n      \"#EA5B5A\",\n      \"#52ACEE\",\n      \"#8A63AF\",\n      \"#62CCA8\",\n      \"#AECB56\",\n      \"#F36B00\",\n      \"#528CA3\",\n      \"#D02382\",\n      \"#FFDAA7\",\n      \"#45E2EA\",\n      \"#C2C4CC\",\n      \"#DB1F00\",\n      \"#6A3A27\",\n      \"#A4180D\",\n      \"#3D9678\",\n      \"#004FAF\",\n      \"#650C7C\",\n      \"#9E7C00\",\n      \"#EA5B5A\",\n      \"#52ACEE\",\n      \"#62CCA8\",\n      \"#E69EA7\",\n      \"#EDBE00\"\n  ],\n  \"fontFamily\": \"Lato\",\n  \"fontColor\": \"#545a6a\",\n  \"hoverlineColor\": \"#cccccc\",\n  \"tickTextColor\": \"#868ea5\",\n  \"axesLabelColor\": \"#868ea5\",\n  \"minHeight\": 240\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BarGraph\n      width={1000}\n      height={1000}\n      data={data}\n      titleDimension={\"Appname\"}\n      config={config}\n      margin={margin}\n      isStacked={false}\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}